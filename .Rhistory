?summarize
View(pack_sum)
submit()
submit()
library(dplyr)
library(sqldf)
library(data.table)
install.packages("data.table")
library(data.table)
library(ggplot2)
library(compare)
install.packages("compare")
library(compare)
install.packages("plotrix")
library(plotrix)
try.error = function(url)
{
try_error = tryCatch(download(url,dest="data.zip"), error=function(e) e)
if (!inherits(try_error, "error")){
download(url,dest="data.zip")
unzip ("data.zip")
}
else if (inherits(try_error, "error")){
cat(url,"not foundn")
}
}
year_start=2013
year_last=year(Sys.time())
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
year_start=2013
year_last=year(Sys.time())
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
filenames = list.files(pattern=^"demo.*.csv", full.names = T)
filenames <- list.files(pattern="^demo.*.csv", full.names=TRUE)
filenames = list.files(pattern="^demo.*.csv", full.names = T)
cat('We have downloaded the following quarterly demography datasets')
filenames
options(warn=-1) # Disable any warnings for this session
demo=lapply(filenames,fread)
demo_all=do.call(rbind,lapply(1:length(demo), function(i) select(as.data.frame(demo[i]),primaryid,caseid, age,age_cod,event_dt,sex,reporter_country)))
dim(demo_all)
names(demo_all)
filenames <- list.files(pattern="^demo.*.csv", full.names=TRUE)
cat('We have downloaded the following quarterly demography datasets')
filenames
options(warn=-1) # Disable any warnings for this session
demo=lapply(filenames,fread)
demo_all=do.call(rbind,lapply(1:length(demo), function(i) select(as.data.frame(demo[i]),primaryid,caseid, age,age_cod,event_dt,sex,reporter_country)))
dim(demo_all)
names(demo_all)
View(try.error)
filenames <- list.files(pattern="^demo.*.csv", full.names=TRUE)
cat('We have downloaded the following quarterly demography datasets')
filenames
options(warn=-1) # Disable any warnings for this session
demo=lapply(filenames,fread)
demo_all=do.call(rbind,lapply(1:length(demo), function(i) select(as.data.frame(demo[i]),primaryid,caseid, age,age_cod,event_dt,sex,reporter_country)))
dim(demo_all)
names(demo_all)
filenames <- list.files(pattern="^demo.*.csv", full.names=TRUE)
cat('We have downloaded the following quarterly demography datasets')
filenames
filenames = list.files(pattern="^demo.*.csv", full.names=TRUE)
year_start=2013
year_last=year(Sys.time())
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
filenames = list.files(pattern="^demo.*.csv", full.names=TRUE)
cat('We have downloaded the following quarterly demography datasets')
filenames
filenames = list.files(pattern="^demo.*.csv", full.names=TRUE)
year_start=2013
year_last=2015
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
year_start=2013
year_last=year(Sys.time())
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
year_start=2013
year_last=year(Sys.time())
year_start=2013
year_last=year(Sys.time())
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
year_start=2013
year_last=year(Sys.time())
for (i in (year_start:year_last)){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
filenames = list.files(pattern="^demo.*.csv", full.names=TRUE)
cat('We have downloaded the following quarterly demography datasets')
filenames
}
year_start=2013
year_last=year(Sys.time())
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
try.error = function(url)
{
try_error = tryCatch(download(url,dest="data.zip"), error=function(e) e)
if (!inherits(try_error, "error")){
download(url,dest="data.zip")
unzip ("data.zip")
}
else if (inherits(try_error, "error")){
cat(url,"not foundn")
}
}
# Download adverse events data
year_start=2013
year_last=year(Sys.time())
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
year_start=2013
year_last=2015
for (i in 2013:2015){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
filenames <- list.files(pattern="^demo.*.csv", full.names=TRUE)
cat('We have downloaded the following quarterly demography datasets')
filenames
year_start=2013
year_last=2015
for (i in 2013:2015){
j=c(1:4)
for (m in j){
url1<-paste0("https://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("https://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("https://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("https://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("https://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
year_start=2013
year_last=2015
for (i in 2013:2015){
j=c(1:4)
for (m in j){
url1<-paste0("https://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("https://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("https://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("https://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("https://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
year_start=2013
year_last=2015
for (i in 2013:2015){
j=c(1:4)
for (m in j){
url1<-paste0("https://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("https://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("https://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("https://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("https://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
}
}
require(downloader)
year_start=2013
year_last=year(Sys.time())
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
install.packages("downloader")
require(downloader)
require("downloader")
year_start=2013
year_last=year(Sys.time())
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
try.error(url1)
try.error(url2)
try.error(url3)
try.error(url4)
try.error(url5)
}
}
filenames <- list.files(pattern="^demo.*.csv", full.names=TRUE)
cat('We have downloaded the following quarterly demography datasets')
filenames
demo = lapply(filenames, fread)
demo_all=do.call(rbind,lapply(1:length(demo),function(i) select(as.data.frame(demo[i]),primaryid,caseid, age,age_cod,event_dt,sex,reporter_country)))
filenames <- list.files(pattern="^drug.*.csv", full.names=TRUE)
cat('We have downloaded the following quarterly drug datasets:n')
filenames
drug=lapply(filenames,fread)
cat('n')
cat('Variable names:n')
names(drug[[1]])
drug_all=do.call(rbind,lapply(1:length(drug), function(i) select(as.data.frame(drug[i]),primaryid,caseid, drug_seq,drugname,route)))
filenames <- list.files(pattern="^indi.*.csv", full.names=TRUE)
filenames
indi=lapply(filenames,fread)
cat('n')
cat('Variable names:n')
names(indi[[15]])
indi_all=do.call(rbind,lapply(1:length(indi), function(i) select(as.data.frame(indi[i]),primaryid,caseid, indi_drug_seq,indi_pt)))
filenames <- list.files(pattern="^outc.*.csv", full.names=TRUE)
cat('We have downloaded the following quarterly patient outcome datasets:n')
filenames
outc_all=lapply(filenames,fread)
outc_all=do.call(rbind,lapply(1:length(outc_all), function(i) select(as.data.frame(outc_all[i]),primaryid,outc_cod)))
filenames <- list.files(pattern="^reac.*.csv", full.names=TRUE)
cat('We have downloaded the following quarterly reaction (adverse event)  datasets:n')
filenames
reac=lapply(filenames,fread)
reac_all=do.call(rbind,lapply(1:length(indi), function(i) select(as.data.frame(reac[i]),primaryid,pt)))
all = as.data.frame(list(Demography = nrow(demo_all), Drug = nrow(drug_all), Indicators = nrow(indi_all), Outcomes = nrow(outc_all), Reactions = nrow(reac_all)))
View(all)
row.names(all) = "Number of Rows"
all
from demo_all;")
FROM demo_all;")
sqldf("SELECT COUNT(primaryid) as 'Numbers of rows of demography data' FROM demo_all;")
nrow(demo_all)
sqldf("SELECT* FROM demo_all LIMIT 6;")
head(demo_all,6)
sqldf("SELECT* FROM demo_all WHERE sex = 'F';")
sqldf("SELECT* FROM demo_all WHERE age BETWEEN 20 AND 25 ;")
sqldf("SELECT sex, COUNT(primaryid) AS Total FROM demo_all WHERE sex IN ('F', 'M'. 'NS', 'UNK') GROUP BY sex ORDER BY Total DESC;")
sqldf("SELECT sex, COUNT(primaryid) AS Total FROM demo_all WHERE sex IN ('F', 'M', 'NS', 'UNK') GROUP BY sex ORDER BY Total DESC;")
demo_all %>% filter(sex%in%c('F','M','NS','UNK')) %>% group_by (sex) %>% sumaries(Total = n()) %>% arrange(desc(Total))
demo_all %>% filter(sex%in%c('F','M','NS','UNK')) %>% group_by (sex) %>% summaries(Total = n()) %>% arrange(desc(Total))
demo_all %>% filter(sex%in%c('F','M','NS','UNK')) %>% group_by (sex) %>% summarise(Total = n()) %>% arrange(desc(Total))
names(indi_all)
names(drug_all)
names(indi_all) = c("primaryid", "drug_seq", "indi_pt")
names(drug_all)
names(indi_all)
names(indi_all) = c("primaryid", "caseid", "drug_seq", "indi_pt")
names(indi_all)
SQL = ("SELECT d.primaryid as primaryid, d.drug_seq as drug_seq, d.route as route, d.drugname as drugname, i.indi_pt as indi_pt FROM drug_all d INNER JOIN indi_all i ON d.primaryid = i.primaryid AND d.drug_seq = i.drug_seq ORDER BY primaryid, drug_seq;")
SQL
SQL = sqldf("SELECT d.primaryid as primaryid, d.drug_seq as drug_seq, d.route as route, d.drugname as drugname, i.indi_pt as indi_pt FROM drug_all d INNER JOIN indi_all i ON d.primaryid = i.primaryid AND d.drug_seq = i.drug_seq ORDER BY primaryid, drug_seq;")
R = merge(drug_all, indi_all, by = intersect(names(drug_all), names(indi_all)))
ggplot(sqldf('SELECT age, sex FROM demo_all WHERE age BETWEEN 0 AND 100 AND sex IN("F", "M") LIMIT 1000;'), aes(x=age, fill = sex)) + geom_density(alpha = 0.6)
LIMIT 10000;'), aes(x=age, fill = sex))+ geom_density(alpha = 0.6)
ggplot(sqldf('SELECT age, sex FROM demo_all WHERE age BETWEEN 0 AND 100 AND sex IN("F", "M") LIMIT 10000;'), aes(x=age, fill = sex)) + geom_density(alpha = 0.6)
WHERE age between 0 AND 100 AND sex IN ("F","M") LIMIT 10000;'), aes(x=age, fill = sex))+ geom_density(alpha = 0.6)
ggplot(sqldf('SELECT age, sex FROM demo_all WHERE age between 0 AND 100 AND sex IN ("F","M") LIMIT 10000;'), aes(x=age, fill = sex))+ geom_density(alpha = 0.6)
ggplot(sqldf("SELECT d.age as age, o.outc_cod as outcome FROM demo_all d INNER JOIN outc_all o ON d.primaryid = o.primaryid WHERE d.age BETWEEN 20 AND 100 LIMIT 20000;"), aes = (x = age, fill = outcome)) + geom_density(alpha = 0.6)
ggplot(sqldf('SELECT d.age as age, o.outc_cod as outcome FROM demo_all d INNER JOIN outc_all o ON d.primaryid = o.primaryid WHERE d.age BETWEEN 20 AND 100 LIMIT 20000;'), aes = (x = age, fill = outcome)) + geom_density(alpha = 0.6)
ggplot(sqldf("SELECT d.age as age, o.outc_cod as outcome FROM demo_all d INNER JOIN outc_all o ON d.primaryid = o.primaryid WHERE d.age BETWEEN 20 AND 100 LIMIT 20000;"), aes(x = age, fill = outcome)) + geom_density(alpha = 0.6)
names(outc_all)
ggplot(sqldf("SELECT d.sex as sex, o.out_cod as outcome FROM demo_all d INNER JOIN outc_all o ON d.primaryid = o.primaryid WHERE d.age BETWEEN 20 AND 100 AND sex IN ('F', 'M') LIMIT 20000;"), aes(x= outcome, fill = sex)) + geom_density(alpha = 0.6)
ggplot(sqldf("SELECT d.sex as sex, o.outc_cod as outcome FROM demo_all d INNER JOIN outc_all o ON d.primaryid = o.primaryid WHERE d.age BETWEEN 20 AND 100 AND sex IN ('F', 'M') LIMIT 20000;"), aes(x= outcome, fill = sex)) + geom_density(alpha = 0.6)
demo1 = demo_all[1:20000,]
demo2 = demo_all[20001:40000,]
R1 = rbind(demo1, demo2)
SQL1 = sqldf("SELECT * FROM demo1 UNION ALL SELECT * FROM demo2;")
R2 = semi_join(demo1, demo2)
SQL2 = sqldf("SELECT * FROM demo1 INTERSECT SELECT * FROM demo2;")
setwd("~/Downloads/Challenges")
?read.xls
require(xlsReadWrite)
require(xlsReadWrite)
xls.getshlib()
install.packages("readxl")
library(readxl)
data1 = read_excel("AddObservations.xls")
str(data1)
data1 = read_excel("AddObservations.xls", sheet = 1)
data1 = read_excel("AddObservations.xls", sheet = 2)
data1 = read_excel("AddObservations.xls", sheet = 1)
data2 = read_excel("AddObservations.xls", sheet = 2)
MergeData = merge(data1, data2, all = TRUE, sort = FALSE)
?merge
house = read_excel("AddObservations.xls", sheet = 1)
house_extra = read_excel("AddObservations.xls", sheet = 2)
MergeData = merge(house, house_extra, all = TRUE, sort = FALSE)
str(MergeData)
MergeData1 = rbind(house, data.frame(House = c("Redwyne"), Region = c("The Reach")
View(data1)
View(data1)
MergeData = merge(data1, data2, all = TRUE, sort = FALSE)
MergeData1 = rbind(house, data.frame(House = c("Redwyne"), Region = c("The Reach")
MergeData1 = rbind(house, data.frame(House = c("Redwyne"), Region = c("The Reach"))
MergeData1 = rbind(house, data.frame(House = c("Redwyne"), Region = c("The Reach")))
str(MergeData1)
summary(MergeData)
house_new = read_excel("AddObservations.xls", sheet = 4)
MergeData2 = merge(house, house_new, all = TRUE, sort = FALSE)
View(MergeData2)
setwd("~/Downloads/Challenges")
candidate = read_excel("DropObservations.xls")
View(data1)
View(data1)
candidate1 = candidate[-c(1:2,)]
candidate1 = candidate[-c(1:2),]
?which
View(candidate)
candidate2 = candidate[-c(2),]
View(candidate2)
house1 = read_xecel("AddColumn1", sheet = 1)
house1 = read_excel("AddColumn1", sheet = 1)
house1 = read_excel("AddColumn1.xls", sheet = 1)
military = read_excel("AddColumn1.xls", sheet = 2)
house1 = cbind(house1, military)
View(house1)
house = read_excel("AddColumn2.xls", sheet = 1)
candidates = read_excel("AddColumn2.xls", sheet = 2)
house = merge(house, candidates, by = 'House', all.x = T, sort = F)
View(house)
View(house)
View(house)
View(house)
house = merge(house, candidates, by = 'House', all.y = T, sort = F)
View(house)
View(house)
house = merge(house, candidates, by = 'House', all = F, sort = F)
View(house)
View(house)
house = merge(house, candidates, by = 'House', all = T, sort = F)
house1 = merge(house, candidates, by = 'House', all.x = T, sort = F)
house2 = merge(house, candidates, by = 'House', all.y = T, sort = F)
house = read_excel("AddColumn2.xls", sheet = 1)
house1 = merge(house, candidates, by = 'House', all.x = T, sort = F)
house2 = merge(house, candidates, by = 'House', all.y = T, sort = F)
house3 = merge(house, candidates, by = 'House', all = F, sort = F)
View(house3)
View(house3)
house4 = merge(house, candidates, by = 'House', all = T, sort = F)
candidates = read_excel("AddColumn3.xls", sheet = 1)
house = read_excel("AddColumn3.xls", sheet = 2)
house = merge(candidates, house, sort = F, all.x = T)
View(house)
house = read_excel("RmObservations.xls", sheet = 1)
candidates = read_excel("RmObservations.xls", sheet = 2)
heir = merge(house, candidates, by = 'House', all.x = T, sort = F)
candidates = candidates[!duplicated(candidates[,1]),]
View(candidates)
View(candidates)
heir = merge(house, candidates, by = "House", all.x = T, sort =F )
View(heir)
MergeData = read_excel("DropColumn.xls")
MergeData = subset(MergeData, select = -c(Region_Right))
View(MergeData)
MergeData = subset(MergeData, select = -c(Region_right))
MergeData = read_excel("DropColumn.xls")
MergeData1 = subset(MergeData, select = -c(Region_right))
MergeData2 = MergeData[,-c(3)]
View(MergeData2)
MergeData2 = MergeData[,-c(4)]
View(MergeData2)
View(MergeData2)
Merged = read_excel("modifying.xls")
View(Merged)
Merged$Region_left[which(Merged$Name == "Arya Stark")] = "North"
View(Merged)
View(Merged)
Merged = read_excel("Rename.xls")
colnames(Merged)[which(names(Merged) == "Rigion_left"] = Region
colnames(Merged)[which(names(Merged) == "Rigion_left"] = "Region"
colnames(Merged)[which(names(Merged) == "Rigion_left")] = "Region"
